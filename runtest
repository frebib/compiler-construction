#!/usr/bin/env sh 
set -e

export OCAMLRUNPARAM=b

cd $(dirname $0)

BIN_DIR="bin"
TEST_BIN_DIR="${BIN_DIR}/test"
GENTEST_BINARY="${BIN_DIR}/gentest"

if ! [ -f ${GENTEST_BINARY} ]; then
    exec make clean test TESTS="$@"
    exit $?
fi

SRC_DIR="src"
TEST_DIR="test"

TEST_SRC_DIR="${TEST_DIR}/generated"
TEST_GEN_SRC_DIR="${SRC_DIR}/test"

set +e # Dont fail if a test fails
failed=()

shopt -s nullglob
tests=(${1:-${TEST_DIR}/*.test})
natives=()
count=${#tests[@]}
shopt -u nullglob

mkdir -p ${TEST_SRC_DIR} ${TEST_BIN_DIR}
for testfile in ${tests[@]}; do
    filenameext=$(basename ${testfile})
    filename="${filenameext%.*}"
    out_src_file="${TEST_SRC_DIR}/${filename}.ml"
    out_bin_file="${filename}.native"

    ${GENTEST_BINARY} ${testfile} ${out_src_file} && echo "=> Generating test '${filename}'"
    buildout=$(ocamlbuild -use-menhir -use-ocamlfind -I ${TEST_SRC_DIR} -I ${TEST_GEN_SRC_DIR} ${filename}.native -pkg str)
    # If the build fails, print the output
    if [ $? -ne 0 ]; then
        echo ":: Error generating test:"
        echo -e "$buildout\n" | sed 's|^|  |g'
        failed+=("$filename")
    else
        mv ${out_bin_file} ${TEST_BIN_DIR}
        natives+=("${TEST_BIN_DIR}/${filename}.native")
    fi
done

echo -e "\n:: All tests built. Running them now!\n"
for exe in ${natives[@]}; do
    filename=$(basename $exe)
    testname=${filename%.*}
    echo -ne "=> Running test '${testname}': "

    if testoutput="$($exe 2>&1)"; then
        echo "PASS!"
    else
        echo "FAIL! (returned $?)"
        echo -e "$testoutput\n"
        failed+=("$testname")
    fi
done

failcount=${#failed[@]}
echo -e "\nTest summary:"
echo -e "\t$((count - failcount)) passed."
[ $failcount -gt 0 ] && echo -e "\t$((failcount)) failed: ${failed[@]}" || true
