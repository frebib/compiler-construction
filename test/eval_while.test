/% CODE %/

// Tests while loops & printInt
var x = 0;
var n = 0;
while (~x < 10) {
  x = ~x + 1;
  n = 3 * ~x;
  n = ~n / 2;
  printInt(~n);
}
return ~n;

/% TREE %/

Program (
  New ("x",
    Const 0,
    New ("n",
      Const 0,
      Seq [
        While (
          BinaryOp (Lth, Deref (Identifier "x"), Const 10),
          Seq [
            Asg (
              Identifier "x",
              BinaryOp (Plus,
                Deref (Identifier "x"),
                Const 1
              )
            );
            Asg (
              Identifier "n",
              BinaryOp (Times,
                Const 3,
                Deref (Identifier "x")
              )
            );
            Asg (
              Identifier "n",
              BinaryOp (Divide,
                Deref (Identifier "n"),
                Const 2
              )
            );
            Printint(Deref (Identifier "n"))
          ]
        );
        Deref (Identifier "n")
      ]
    )
  )
)

/% RESULT %/

Value (Const 15)

/% END %/
