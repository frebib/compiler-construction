/% CODE %/

function assignment() {
  x = 4;
  y = 3 / 1;
  x = (~x + ~y);
  z = if (~x || ~y) 1 else false;
  things = stuff(and(things));
}

/% TREE %/

Program (
  Let ("assignment", 
    Function ([], Seq [
      Asg (Identifier "x", Const 4);
      Asg (
        Identifier "y",
        BinaryOp (Divide, Const 3, Const 1)
      );
      Asg (
        Identifier "x",
        BinaryOp (Plus,
          Deref (Identifier "x"),
          Deref (Identifier "y")
        )
      );
      Asg (
        Identifier "z",
        If (
          BinaryOp (
            Or, Deref (Identifier "x"),
            Deref (Identifier "y")
          ),
          Const 1,
          Boolean false
        )
      );
      Asg (
        Identifier "things",
        Application (
          Identifier "stuff", [
          Application (
            Identifier "and", [
            Identifier "things"
          ])
        ])
      )
    ]),
    Empty
  )
)

/% END %/
